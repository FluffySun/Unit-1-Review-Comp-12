//Ema Sun
//1-4
//Sept. 11th -> finish 1.5 patterns -> tile pattern (no change) ->choose in a square
//Sept. 12th -> Finish 3/3 !!!

//mouse and keyboard input, buttons, loops, and arrays.
//three patterns that are generated by a while loop. 
//They do not have to be animated patterns, they can just be static. 
//create a Gallery framework to show off your patterns using the mode framework
//Include buttons to navigate from one pattern to the next.

//MODE VARIABLES
int mode;
final int INTRO = 0;
final int PATTERN1 =1;
final int PATTERN2 =2;
final int PATTERN3 = 3;
final int PAUSE = 4;
final int GAMEOVER =5;

//TARGET VARIABLES


//COLOR PALLETTE
color black = #000000;
color white = #ffffff;
color brown = #bc6c25;
color lbrown= #dda15e;
color cream = #fefae0;
color dgreen = #119da4;
color blue = #19647e;
color red = #cc2936;
color pink = #ebbab9;
color green = #38726c;
color tiffanygreen = #84dccf;

void setup () {
  size (800, 800);
  textAlign (CENTER, CENTER);
  rectMode (CENTER);
  mode = INTRO;
}

void draw () {
  if (mode == INTRO) {
    intro ();
  } else if (mode == PATTERN1) {
    pattern1();
  } else if (mode == PATTERN2) {
    pattern2;
  } else if (mode == PATTERN3) {
    pattern3;
  } else if (mode == PAUSE) {
    pausescreen();
  } else if (mode == GAMEOVER) {
    gameover();
  } else {
    println("Mode Error: Mode is " + mode);
  }
}
    
//MOUSE MATH START:
//  if (mousePressed) { //do not need == true, different effect "mouseDragged"
//  line (width/2, height/2, mouseX, mouseY);
//  }
//}

//Circular button:
//x, y is the center of circle
//the mouse X, mouse Y is how far from the center of circle?
//if (dist(x, y, mX, mY) < 200) {}

//Rectangular button:
//x, y the corner of the rectangle
//rect (100, 100, 200, 100);
//if (mx>100 && mx<300 && mY>100 && mY<200)
//:MOUSE MATH END
